<?xml version="1.0" encoding="utf-8"?>
<topic id="cc9271d0-86e4-480a-9a4c-b36ecb1e153f" revisionNumber="1">
  <developerOrientationDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->
    <introduction>
        <para>
        This is the reference documentation for the MapGuide Maestro API. The API consists of:
        </para>
        <list class="bullet">
           <listItem><para>The Maestro API core (OSGeo.MapGuide.MaestroAPI.dll)</para></listItem>
           <listItem><para>The Maestro Extended Object Model Helper (OSGeo.MapGuide.ExtendedObjectModels.dll)</para></listItem>
        </list>
        <para>
        For building GUI applications, you can tap into the Maestro UI components, which consist of:
        </para>
        <list class="bullet">
           <listItem><para>The Maestro Editor UI library (Maestro.Editors.dll)</para></listItem>
           <listItem><para>The Maestro Packaging library (Maestro.Packaging.dll)</para></listItem>
           <listItem><para>The Maestro Login UI library (Maestro.Login.dll)</para></listItem>
           <listItem><para>The Maestro Shared UI library (Maestro.Shared.UI.dll)</para></listItem>
           <listItem><para>The Maestro Map Viewer library (Maestro.MapViewer.dll)</para></listItem>
        </list>
        <para>
        For extending the MapGuide Maestro application, you can use the AddIn API, which consists of:
        </para>
        <list class="bullet">
            <listItem><para>SharpDevelop Core (ICSharpCode.Core.dll)</para></listItem>
            <listItem><para>SharpDevelop WinForms (ICSharpCode.Core.WinForms.dll)</para></listItem>
            <listItem><para>The Maestro Base AddIn (Maestro.Base.dll)</para></listItem>
        </list>
        <para>
        Also included in this documentation is the Developer's Guide to help you <link xlink:href="0395ae33-fb9f-46cf-bf1e-528a4ec3d948">Get Started</link>
        </para>
    </introduction>
    <!-- <inThisSection>Optional description of content in this section</inThisSection> -->
    <!-- <reference>Optional reference section</reference> -->
    <!-- <relatedSections>Optional related sections info</relatedSections> -->
    <!-- <externalResources>Optional external resources section</externalResources> -->
    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID">Link text</link>
      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerOrientationDocument>
</topic>
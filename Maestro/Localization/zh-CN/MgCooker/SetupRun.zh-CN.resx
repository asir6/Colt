<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="button3.Text" xml:space="preserve">
    <value>另存为脚本...</value>
  </data>
  <data name="button2.Text" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="button1.Text" xml:space="preserve">
    <value>立即创建图块</value>
  </data>
  <data name="saveFileDialog1.Title" xml:space="preserve">
    <value>选择要保存脚本的文件</value>
  </data>
  <data name="ModfiedOverrideWarning.Text" xml:space="preserve">
    <value>坐标系已更改</value>
  </data>
  <data name="ResetBounds.Text" xml:space="preserve">
    <value>重置</value>
  </data>
  <data name="BoundsOverride.Text" xml:space="preserve">
    <value>重定义边界值</value>
  </data>
  <data name="chkUseDifferentConnection.Text" xml:space="preserve">
    <value>使用另外的连接</value>
  </data>
  <data name="UseNativeAPI.Text" xml:space="preserve">
    <value>使用原生API来连接</value>
  </data>
  <data name="UseNativeAPI.ToolTip" xml:space="preserve">
    <value>使用原生API来连接可能更加快速，但是它要求二进制文件，开放的端口和一个webconfig.ini...</value>
  </data>
  <data name="Password.ToolTip" xml:space="preserve">
    <value>用来连接到服务器的密码</value>
  </data>
  <data name="Username.ToolTip" xml:space="preserve">
    <value>用来连接到服务器的用户名</value>
  </data>
  <data name="MapAgent.ToolTip" xml:space="preserve">
    <value>输入MapAgent的统一资源定位符（URL）</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>密码</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>用户名</value>
  </data>
  <data name="RandomTileOrder.Text" xml:space="preserve">
    <value>随机图块生成顺序</value>
  </data>
  <data name="RandomTileOrder.ToolTip" xml:space="preserve">
    <value>随机选择生成的图块，而不是按照顺序进行</value>
  </data>
  <data name="ThreadCount.ToolTip" xml:space="preserve">
    <value>允许同时到达服务器的请求数量</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>并发请求数</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>线程</value>
  </data>
  <data name="MetersPerUnit.ToolTip" xml:space="preserve">
    <value>每个地图单位对应的米制的大小</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>米/单位</value>
  </data>
  <data name="LimitTileset.Text" xml:space="preserve">
    <value>最大图块数</value>
  </data>
  <data name="LimitTileset.ToolTip" xml:space="preserve">
    <value>设置一个可以生成的图块的最大数量，请注意设置该值可能导致无法生成所有的图块</value>
  </data>
  <data name="UseOfficialMethod.Text" xml:space="preserve">
    <value>使用官方方法</value>
  </data>
  <data name="UseOfficialMethod.ToolTip" xml:space="preserve">
    <value>使用官方方法是最精确的，但是要求 米/地图单位 必须输入</value>
  </data>
  <data name="MaxRowLimit.ToolTip" xml:space="preserve">
    <value>可以生成图块的最大行数</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>最大行数</value>
  </data>
  <data name="MaxColLimit.ToolTip" xml:space="preserve">
    <value>可以生成图块的最大列数</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>最大列数</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>图块设置</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>设置图块生成参数并创建图块</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>缓冲区宽度</value>
  </data>
  <data name="label21.Text" xml:space="preserve">
    <value>角度</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Y 原点</value>
  </data>
  <data name="label22.Text" xml:space="preserve">
    <value>X 原点</value>
  </data>
  <data name="label23.Text" xml:space="preserve">
    <value>裁剪控制</value>
  </data>
  <data name="label24.Text" xml:space="preserve">
    <value>原点控制</value>
  </data>
  <data name="label25.Text" xml:space="preserve">
    <value>角度控制</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Y 方向重复间距</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>X 方向重复间距</value>
  </data>
  <data name="button2.Text" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="button1.Text" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="label16.Text" xml:space="preserve">
    <value>重复</value>
  </data>
  <data name="label14.Text" xml:space="preserve">
    <value>终点偏移</value>
  </data>
  <data name="label15.Text" xml:space="preserve">
    <value>起点偏移</value>
  </data>
  <data name="label12.Text" xml:space="preserve">
    <value>顶点控制</value>
  </data>
  <data name="label13.Text" xml:space="preserve">
    <value>角度</value>
  </data>
  <data name="label19.Text" xml:space="preserve">
    <value>连接点</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>单位控制</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>角度控制</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>原点Y方向偏移</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>原点X方向偏移</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>角度</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>角度控制</value>
  </data>
  <data name="symAreaRepeatY.ToolTip" xml:space="preserve">
    <value>符号之间纵向上的间隔长度。单位为毫米(mm)。默认值为0</value>
  </data>
  <data name="label20.Text" xml:space="preserve">
    <value>默认 Path</value>
  </data>
  <data name="symAreaOriginY.ToolTip" xml:space="preserve">
    <value>符号在Y坐标方向从原点的偏移量(毫米)。仅当原点控制(OriginControl)设置为"全局"或"局部"时起作用。默认值为0</value>
  </data>
  <data name="symAreaAngle.ToolTip" xml:space="preserve">
    <value>每个符号的旋转角度。仅当角度控制(AngleControl)设置为“从角度”时起作用。默认值为0</value>
  </data>
  <data name="symAreaBufferWidth.ToolTip" xml:space="preserve">
    <value>符号被渲染到的缓冲区的宽度(毫米)。默认值为0</value>
  </data>
  <data name="symAreaOriginControl.ToolTip" xml:space="preserve">
    <value>指定原点的定义。其值为“全局”，“本地”，或“中间对其”之一。默认为“全局”</value>
  </data>
</root>
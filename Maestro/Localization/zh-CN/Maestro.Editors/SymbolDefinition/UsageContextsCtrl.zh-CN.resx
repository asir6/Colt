<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>缓冲区宽度</value>
  </data>
  <data name="label21.Text" xml:space="preserve">
    <value>角度</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Y 原点</value>
  </data>
  <data name="label22.Text" xml:space="preserve">
    <value>X 原点</value>
  </data>
  <data name="label23.Text" xml:space="preserve">
    <value>裁剪控制</value>
  </data>
  <data name="label24.Text" xml:space="preserve">
    <value>原点控制</value>
  </data>
  <data name="label25.Text" xml:space="preserve">
    <value>角度控制</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Y 方向重复间距</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>X 方向重复间距</value>
  </data>
  <data name="button2.Text" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="button1.Text" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="label16.Text" xml:space="preserve">
    <value>重复</value>
  </data>
  <data name="label14.Text" xml:space="preserve">
    <value>终点偏移</value>
  </data>
  <data name="label15.Text" xml:space="preserve">
    <value>起点偏移</value>
  </data>
  <data name="label12.Text" xml:space="preserve">
    <value>顶点控制</value>
  </data>
  <data name="label13.Text" xml:space="preserve">
    <value>角度</value>
  </data>
  <data name="label19.Text" xml:space="preserve">
    <value>连接点</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>单位控制</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>角度控制</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>原点Y方向偏移</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>原点X方向偏移</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>角度</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>角度控制</value>
  </data>
  <data name="symAreaRepeatY.ToolTip" xml:space="preserve">
    <value>符号之间纵向上的间隔长度。单位为毫米(mm)。默认值为0</value>
  </data>
  <data name="label20.Text" xml:space="preserve">
    <value>默认 Path</value>
  </data>
  <data name="symAreaOriginY.ToolTip" xml:space="preserve">
    <value>符号在Y坐标方向从原点的偏移量(毫米)。仅当OriginControl(原点控制)设置为Global(全局)或Local(局部)时起作用。默认值为0</value>
  </data>
  <data name="symAreaAngle.ToolTip" xml:space="preserve">
    <value>每个符号的旋转角度。仅当AngleControl(角度控制)设置为“通过角度值”时起作用。默认值为0</value>
  </data>
  <data name="symAreaBufferWidth.ToolTip" xml:space="preserve">
    <value>符号被渲染到的缓冲区的宽度(毫米)。默认值为0</value>
  </data>
  <data name="symAreaOriginControl.ToolTip" xml:space="preserve">
    <value>指定原点的定义。其值为Global(全局)或Local(局部)，或“中间对齐”之一。默认为Global</value>
  </data>
  <data name="symAreaRepeatX.ToolTip" xml:space="preserve">
    <value>符号之间的水平间隔距离(毫米)。默认值为0</value>
  </data>
  <data name="symAreaOriginX.ToolTip" xml:space="preserve">
    <value>符号在X方向距离原点的偏移距离(毫米)。仅在OriginControl(原点控制)为Global(全局)或Local(本地)时起作用。默认值为0</value>
  </data>
  <data name="symAreaClippingControl.ToolTip" xml:space="preserve">
    <value>指定了当符号位于几何边框上时的裁剪行为。必须指定为：Clip(裁剪，默认值)，Inside(内部)，或重叠(Overlap)</value>
  </data>
  <data name="symAreaAngleControl.ToolTip" xml:space="preserve">
    <value>Specifies how the symbol angle is defined.  This must evaluate to one of: FromAngle (default) or FromGeometry
指定了符号旋转角度的定义。 必须指定为：FromAngle(通过角度值，默认值)或FromGeometry(通过几何图形)</value>
  </data>
  <data name="symLineVertexMiterLimit.ToolTip" xml:space="preserve">
    <value>描绘多短线拐角斜接的限长。当斜接长度和符号高度的比值大于该值时，斜接会被描绘出来。该值必须大于0.默认值为5.</value>
  </data>
  <data name="label18.Text" xml:space="preserve">
    <value>顶点斜切限制</value>
  </data>
  <data name="label17.Text" xml:space="preserve">
    <value>顶点角度限制</value>
  </data>
  <data name="symLineVertexAngleLimit.ToolTip" xml:space="preserve">
    <value>指定限制角度(单位为度)。该值若指定，则必须大于等于0。默认值为0</value>
  </data>
  <data name="symLineEndOffset.ToolTip" xml:space="preserve">
    <value>指定符号到哪里结束，从要素的终点算起。默认值为0</value>
  </data>
  <data name="symLineAngle.ToolTip" xml:space="preserve">
    <value>指定符号的角度(单位为度)。该值仅当AngleControl(角度控制)被设置为FromAngle(通过角度值)时起作用。默认值为0</value>
  </data>
  <data name="symLineUnitsControl.ToolTip" xml:space="preserve">
    <value>指定参数是一个固定的数字(毫米)还是参数化的。该值必须为Absolute(绝对的)或Parametric(参数化的)。默认值为Absolute</value>
  </data>
  <data name="symLineVertexJoin.ToolTip" xml:space="preserve">
    <value>Specifies the wrapping behavior at vertices for all graphic elements.  Only applies if VertexControl evaluates to OverlapWrap.  This must evaluate to one of: None, Bevel, Round (default), or Miter
指定图形元素顶点的环绕行为。仅当VertexControl(顶点控制)设置为OverlapWrap(重叠环绕)时起作用。该值必须为：None(空)，Bevel(斜切), Round(圆形), 或 Miter(斜接)</value>
  </data>
  <data name="symLineRepeat.ToolTip" xml:space="preserve">
    <value>指定符号之间重复的间隔。默认值为0</value>
  </data>
  <data name="symLineStartOffset.ToolTip" xml:space="preserve">
    <value>指定符号从哪里开始描绘，从要素的起点算起。默认值为0</value>
  </data>
  <data name="symLineVertexControl.ToolTip" xml:space="preserve">
    <value>指定符号在顶点的行为。该值必须为：OverlapNone(不重叠), OverlapDirect(直接重叠), OverlapNoWrap(重叠而不环绕), 或 OverlapWrap(重叠环绕)。默认值为OverlapNone</value>
  </data>
  <data name="symLineAngleControl.ToolTip" xml:space="preserve">
    <value>指定符号旋转角度是如何被定义的。该值必须为：FromAngle(通过角度值) 或 FromGeometry(通过几何图形)</value>
  </data>
  <data name="textBox16.ToolTip" xml:space="preserve">
    <value>指定在描绘符号时的默认路径属性。当符号不能被正常描绘或者路径没有指定属性时，会描绘一条中心线。此时，路径中定义的几何图形被忽略</value>
  </data>
  <data name="symPointOriginOffsetY.ToolTip" xml:space="preserve">
    <value>指定符号在Y方向上距离原点的偏移量(毫米)。该偏移量会在符号被缩放以及旋转前应用。默认值为0</value>
  </data>
  <data name="symPointAngle.ToolTip" xml:space="preserve">
    <value>指定符号的角度(单位为度)。该值仅当AngleControl(角度控制)被设置为FromAngle(通过角度值)时起作用。默认值为0</value>
  </data>
  <data name="symPointOriginOffsetX.ToolTip" xml:space="preserve">
    <value>指定符号在X方向上距离原点的偏移量(毫米)。该偏移量会在符号被缩放以及旋转前应用。默认值为0</value>
  </data>
  <data name="symPointAngleControl.ToolTip" xml:space="preserve">
    <value>指定符号旋转角度是如何被定义的。该值必须为：FromAngle(通过角度值) 或 FromGeometry(通过几何图形)</value>
  </data>
  <data name="chkArea.Text" xml:space="preserve">
    <value>定义面(多边形)的用法上下文</value>
  </data>
  <data name="chkLine.Text" xml:space="preserve">
    <value>定义线的用法上下文</value>
  </data>
  <data name="chkPoint.Text" xml:space="preserve">
    <value>定义点的用法上下文</value>
  </data>
  <data name="chkArea.ToolTip" xml:space="preserve">
    <value>勾选以允许在多边形上下文中使用符号定义</value>
  </data>
  <data name="chkLine.ToolTip" xml:space="preserve">
    <value>勾选以允许在线上下文中使用符号定义</value>
  </data>
  <data name="chkPoint.ToolTip" xml:space="preserve">
    <value>勾选以允许在点上下文中使用符号定义</value>
  </data>
</root>